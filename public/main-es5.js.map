{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/chat-window/chat-window.component.ts","webpack:///src/app/components/chat-window/chat-window.component.html","webpack:///src/app/components/lobby/lobby.component.ts","webpack:///src/app/components/lobby/lobby.component.html","webpack:///src/app/components/message-scroll/message-scroll.component.ts","webpack:///src/app/components/message-scroll/message-scroll.component.html","webpack:///src/app/components/message/message.component.ts","webpack:///src/app/components/toggle-theme-icon/toggle-theme-icon.component.ts","webpack:///src/app/components/toggle-theme-icon/toggle-theme-icon.component.html","webpack:///src/app/components/welcome/welcome.component.ts","webpack:///src/app/components/welcome/welcome.component.html","webpack:///src/app/directives/add-component.directive.ts","webpack:///src/app/services/history.service.ts","webpack:///src/app/services/session-manager.service.ts","webpack:///src/app/services/socket.service.ts","webpack:///src/app/services/theme.service.ts","webpack:///src/app/utils/add-item.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","themeService","title","darkTheme","toggleTheme","subscribe","data","selector","templateUrl","styleUrls","providers","AppModule","declarations","bootstrap","ChatWindowComponent","socketService","route","router","userTyping","typingMessage","socket","on","username","input","nativeElement","focus","params","user","currentConversation","navigate","emit","message","sendMessage","value","toLobby","typing","stopTyping","LobbyComponent","history","userlist","historyNotifications","usersList","notifications","MessageScrollComponent","componentFactoryResolver","localEmitter","fromUser","messageObject","isResponse","date","loadMessageOnView","addMessage","componentFactory","resolveComponentFactory","viewContainerRef","componentRef","createComponent","instance","messagesFromHistory","getHistory","undefined","forEach","removeAllListeners","MessageComponent","template","ToggleThemeIconComponent","WelcomeComponent","error","errorMessage","sendUsername","AddComponentDirective","HistoryService","_messages","readed","push","providedIn","SessionManagerService","_session","navigateByUrl","SocketService","_router","_history","_hasSession","_username","_usersList","_currentConversation","_socket","_localEmmiter","upSession","index","findIndex","splice","messageData","now","Date","nowHour","toLocaleTimeString","hour","minute","hour12","ThemeService","AddItem","environment","wsHost","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WelcomeComponent } from './components/welcome/welcome.component';\nimport { LobbyComponent } from './components/lobby/lobby.component';\nimport { ChatWindowComponent } from './components/chat-window/chat-window.component';\nimport { SessionManagerService } from './services/session-manager.service';\n\nconst routes: Routes = [\n  { path: '', component: WelcomeComponent },\n  { path: 'lobby', component: LobbyComponent, canActivate:[SessionManagerService]},\n  { path: 'chat/:user', component: ChatWindowComponent, canActivate:[SessionManagerService]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ThemeService } from './services/theme.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [ThemeService]\n})\nexport class AppComponent implements OnInit{\n  title = 'angular-chat';\n  darkTheme: boolean = true;\n\n  constructor(private themeService: ThemeService) {}\n\n  ngOnInit(){\n    this.themeService.toggleTheme.subscribe(data => {\n      this.darkTheme = !this.darkTheme\n    });\n }\n}\n","<div class=\"main-component\" [ngClass]=\"{'dark-theme': darkTheme == true, 'ligth-theme': darkTheme == false}\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgMaterialIconModule } from 'ng-material-icon';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MessageComponent } from './components/message/message.component';\nimport { ChatWindowComponent } from './components/chat-window/chat-window.component';\nimport { WelcomeComponent } from './components/welcome/welcome.component';\nimport { MessageScrollComponent } from './components/message-scroll/message-scroll.component';\nimport { AddComponentDirective } from './directives/add-component.directive';\nimport { LobbyComponent } from './components/lobby/lobby.component';\nimport { ToggleThemeIconComponent } from './components/toggle-theme-icon/toggle-theme-icon.component';\nimport { SessionManagerService } from './services/session-manager.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MessageComponent,\n    ChatWindowComponent,\n    WelcomeComponent,\n    MessageScrollComponent,\n    AddComponentDirective,\n    LobbyComponent,\n    ToggleThemeIconComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgMaterialIconModule\n  ],\n  providers: [SessionManagerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { SocketService } from 'src/app/services/socket.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-chat-window',\n  templateUrl: './chat-window.component.html',\n  styleUrls: ['./chat-window.component.scss']\n})\nexport class ChatWindowComponent implements OnInit {\n  public username: string;\n  public userTyping: boolean = false;\n  public typingMessage: string = 'escribiendo...';\n  @ViewChild('messageInput', { static: true }) input: ElementRef;\n  constructor(private socketService: SocketService, private route: ActivatedRoute, private router: Router) {\n    this.socketService.socket.on('typing', username => {\n      if (this.username == username) {\n        this.userTyping = true;\n      }\n    })\n    this.socketService.socket.on('stop typing', username => {\n      if (this.username == username) {\n        this.userTyping = false;\n      }\n    })\n  }\n\n  ngOnInit(): void {\n    this.input.nativeElement.focus()\n    this.route.params.subscribe((params: Params) => {\n      this.username = params.user; \n    });\n    this.socketService.currentConversation = this.username;\n  }\n\n  toLobby() {\n    this.router.navigate(['lobby'])\n  }\n\n  typing() {\n    this.socketService.socket.emit('typing', this.username)\n  }\n\n  stopTyping() {\n    this.socketService.socket.emit('stop typing', this.username)\n  }\n\n  sendMessage(message) {\n    this.socketService.socket.emit('stop typing', this.username)\n    this.socketService.sendMessage(this.username, message)\n    this.input.nativeElement.value = ''\n  }\n\n}\n","<section class=\"chat-container\">\n  <nav class=\"header\">\n    <div class=\"icon-container left\" (click)=\"toLobby()\">\n      <ng-material-icon icon=\"arrow_back\" size=\"2\" ></ng-material-icon>\n    </div>\n    <div class=\"username-area\">\n      <span class=\"username\">{{username}}</span>\n      <span class=\"typing-message\" *ngIf=\"userTyping\">{{typingMessage}}</span>\n    </div>\n    <div class=\"icon-container rigth\">\n      <app-toggle-theme-icon></app-toggle-theme-icon>\n    </div>\n  </nav>\n  <app-message-scroll class=\"chat\" fromUser=\"{{username}}\"></app-message-scroll>\n  <footer class=\"writter\">\n    <input type=\"text\" #messageInput class=\"textbox\" placeholder=\"Mensaje\" (keyup.enter)=\"sendMessage(messageInput.value)\" (input)=\"typing()\" (blur)=\"stopTyping()\">\n    <button class=\"send-message\" (click)=\"sendMessage(messageInput.value)\">\n      <ng-material-icon icon=\"send\" size=\"2\" ></ng-material-icon>\n    </button>\n  </footer>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from 'src/app/services/socket.service';\nimport { Router } from '@angular/router';\nimport { HistoryService } from 'src/app/services/history.service';\n\n@Component({\n  selector: 'app-lobby',\n  templateUrl: './lobby.component.html',\n  styleUrls: ['./lobby.component.scss']\n})\nexport class LobbyComponent implements OnInit {\n  public userlist: Array<string> = []\n  public historyNotifications: object = {};\n  private socket: any;\n\n  constructor(private socketService: SocketService, private router: Router, private history: HistoryService) {\n    this.userlist = socketService.usersList\n    this.socket = socketService.socket\n    history.notifications.on('one unread more', username => {\n      this.historyNotifications[username] = (this.historyNotifications[username] || 0) + 1\n    })\n    history.notifications.on('all readed', username => {\n      delete(this.historyNotifications[username])\n    })\n  }\n\n  ngOnInit(): void {\n    this.socketService.currentConversation = '';\n  }\n\n  messageTo(username) {\n    this.router.navigate(['chat', username])\n  }\n\n}\n","<section class=\"lobby-container\">\n  <nav class=\"header\">\n    <span class=\"title\">Angular Chat</span>\n    <div class=\"icon-container\">\n      <app-toggle-theme-icon></app-toggle-theme-icon>\n    </div>\n  </nav>\n  <div class=\"userlist\">\n    <div *ngFor=\"let usernameOfList of userlist\" class=\"user-element\" (click)=\"messageTo(usernameOfList)\">\n      <span class=\"username\">@{{usernameOfList}}</span>\n      <span *ngIf=\"historyNotifications[usernameOfList]\" class=\"notification\">{{historyNotifications[usernameOfList]}}</span>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit, ViewChild, ComponentFactoryResolver, Input } from '@angular/core';\nimport { AddComponentDirective } from 'src/app/directives/add-component.directive';\nimport { MessageData } from 'src/app/interfaces/message';\nimport { AddItem } from 'src/app/utils/add-item';\nimport { SocketService } from 'src/app/services/socket.service';\nimport { MessageComponent } from '../message/message.component';\nimport { HistoryService } from 'src/app/services/history.service';\n\n\n@Component({\n  selector: 'app-message-scroll',\n  templateUrl: './message-scroll.component.html',\n  styleUrls: ['./message-scroll.component.scss']\n})\nexport class MessageScrollComponent implements OnInit {\n  private localSuscriber;\n  @Input() public fromUser: string;\n  @ViewChild(AddComponentDirective, {static: true}) addMessage: AddComponentDirective;\n\n  constructor(private socketService: SocketService, private componentFactoryResolver: ComponentFactoryResolver, private history: HistoryService){\n\n    this.socketService.localEmitter.on('local message outcome', data => {\n      if (data.username == this.fromUser) {\n        const messageObject = {\n          isResponse: false, \n          message: data.message, \n          date: data.date\n        }\n        this.loadMessageOnView( new AddItem(MessageComponent, messageObject))\n        this.history.addMessage(this.fromUser, messageObject, true)\n      }\n    })\n    this.socketService.localEmitter.on('local message income', data => {\n      if (data.username == this.fromUser) {\n        const messageObject = {\n          isResponse: true, \n          message: data.message, \n          date: data.date\n        }\n        this.loadMessageOnView( new AddItem(MessageComponent, messageObject))\n        this.history.addMessage(this.fromUser, messageObject, true)\n      }\n    })\n  }\n\n  loadMessageOnView(message: AddItem) {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(message.component);\n    const viewContainerRef = this.addMessage.viewContainerRef;\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n\n    (<MessageData>componentRef.instance).data = message.data;\n\n  }\n\n  ngOnInit(): void {\n    let messagesFromHistory = this.history.getHistory(this.fromUser)\n    \n    if(messagesFromHistory != undefined) {\n      messagesFromHistory.forEach( e => {\n        this.loadMessageOnView(\n          new AddItem(\n            MessageComponent, \n            {\n              isResponse: e.isResponse, \n              message: e.message, \n              date: e.date\n            }\n          )\n        )\n      })\n    }\n  }\n\n  ngOnDestroy(){\n    this.socketService.localEmitter.removeAllListeners('local message outcome');\n    this.socketService.localEmitter.removeAllListeners('local message income');\n  }\n}\n","<div class=\"message-scroll-container\">\n  <ng-template add-component></ng-template>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { MessageData } from 'src/app/interfaces/message';\n\n@Component({\n  selector: 'app-message',\n  template: `\n  <div [class.response]=\"this.data.isResponse == true\" class=\"message-container\">\n    <div class=\"message\">\n      <p class=\"message-content\">{{data.message}}</p>\n      <span class=\"date\">{{data.date}}</span>\n    </div>\n  </div>\n  `,\n  styleUrls: ['./message.component.scss']\n})\nexport class MessageComponent implements MessageData{\n\n  @Input() data: any;\n\n}\n","import { Component } from '@angular/core';\nimport { ThemeService } from 'src/app/services/theme.service';\n\n@Component({\n  selector: 'app-toggle-theme-icon',\n  templateUrl: './toggle-theme-icon.component.html',\n  styleUrls: ['./toggle-theme-icon.component.scss']\n})\nexport class ToggleThemeIconComponent {\n\n  constructor(private themeService: ThemeService) {}\n\n  toggleTheme() {\n    this.themeService.toggleTheme.emit('toggle');\n  }\n\n}\n","<div class=\"toggle-theme-icon-container\" (click)=\"toggleTheme()\">\n  <ng-material-icon icon=\"brightness_medium\" size=\"2\" ></ng-material-icon>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from 'src/app/services/socket.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\n\nexport class WelcomeComponent implements OnInit {\n\n  socket: any;\n  error: boolean = false;\n  errorMessage: string = 'Nombre de usuario no dispobnible'\n\n  constructor( socketService: SocketService, private router: Router ) {\n    this.socket = socketService.socket\n  }\n\n  ngOnInit() {\n    this.socket.on('sign in', () => {\n      this.error = false;\n    })\n    this.socket.on('username not available', () => {\n      this.error = true;\n    })\n  }\n\n  sendUsername(username) {\n    this.socket.emit('add user', username)\n  }\n\n}\n","<div class=\"welcome-container\">\n  <div class=\"icon-container\">\n    <app-toggle-theme-icon></app-toggle-theme-icon>\n  </div>\n  <div class=\"textarea\">\n    <span class=\"welcome-title\">Ingresa tu usuario</span>\n    <input type=\"text\" #usernameInput class=\"username-input\" (keyup.enter)=\"sendUsername(usernameInput.value)\">\n    <span *ngIf=\"error\" class=\"error\">{{errorMessage}}</span>\n  </div>\n</div>\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[add-component]'\n})\n\nexport class AddComponentDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}","import { Injectable } from '@angular/core';\nimport { EventEmitter } from 'events';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoryService {\n  private _messages: object = {};\n  public notifications: any = new EventEmitter()\n\n  constructor() { }\n\n  addMessage(fromUser: string, message: object, readed: boolean = false) {\n    this._messages[fromUser] = this._messages[fromUser] || []\n    this._messages[fromUser].push(message)\n    if(!readed) {\n      this.notifications.emit('one unread more', fromUser)\n    }\n  }\n\n  getHistory(fromUser: string) {\n    const history = this._messages[fromUser] || undefined;\n    this.notifications.emit('all readed', fromUser)\n    return history\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionManagerService implements CanActivate{\n  private _session:boolean = false;\n\n  constructor(private router: Router) { }\n\n  canActivate(){\n    if (!this._session) { this.router.navigateByUrl('/')}\n    return true;\n  }\n\n  upSession() {\n    this._session = true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport io from 'socket.io-client';\nimport { Router } from '@angular/router';\nimport { SessionManagerService } from './session-manager.service';\nimport { HistoryService } from './history.service';\nimport { EventEmitter } from 'events';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n  \n  private _socket: any;\n  private _hasSession: boolean = false;\n  private _username: string = '';\n  private _localEmmiter: any;\n  private _usersList: Array<string> = [];\n  private _currentConversation: string = '';\n  \n  constructor(private _router: Router, private _session: SessionManagerService, private _history: HistoryService) {\n      this._socket = io()\n      this._localEmmiter = new EventEmitter()\n\n      this._socket.on('sign in', data => {\n        this._username = data.username\n        this._usersList = data.usersList\n        this._hasSession = true;\n        this._session.upSession()\n        this._router.navigate(['lobby'])\n      })\n\n      this._socket.on('user added', username => {\n        this._usersList.push(username)\n      })\n\n      this._socket.on('user left', username => {\n        let index = this._usersList.findIndex(e => e == username)\n        this._usersList.splice(index, 1)\n      })\n\n      this._socket.on('incoming message', data => {\n        const messageData = {\n          isResponse: true,\n          message: data.message,\n          date: data.date\n        }\n        if(data.username != this._currentConversation) {\n          this._history.addMessage(data.username, messageData)\n        }\n        else {\n          this._localEmmiter.emit('local message income', data)\n        }\n      })\n  }\n  \n  public get socket() : any {\n    return this._socket\n  }\n  \n  public get localEmitter() : any {\n    return this._localEmmiter\n  }\n  \n  public get usersList() : Array<string> {\n    return this._usersList\n  }\n\n  \n  public get currentConversation() : string {\n    return this._currentConversation\n  }\n  \n  \n  public set currentConversation(value : string) {\n    this._currentConversation = value;\n  }\n  \n  \n  sendMessage(username: string, message: string) {\n    const now = new Date();\n    const nowHour = now.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: false\n    })\n    let messageData = {\n      username,\n      message,\n      date: nowHour\n    }\n\n    this._socket.emit('message', messageData)\n    messageData['isResponse'] = false\n    this._localEmmiter.emit('local message outcome', messageData)\n  }\n  \n}\n","import { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ThemeService {\n\n  public toggleTheme = new EventEmitter();\n\n}\n","import { Type } from '@angular/core';\n\nexport class AddItem {\n  constructor(public component: Type<any>, public data: any) {}\n}\n","export const environment = {\n  wsHost: 'http://localhost:5000',\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}