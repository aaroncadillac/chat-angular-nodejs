{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/chat-window/chat-window.component.ts","./src/app/components/chat-window/chat-window.component.html","./src/app/components/lobby/lobby.component.ts","./src/app/components/lobby/lobby.component.html","./src/app/components/message-scroll/message-scroll.component.ts","./src/app/components/message-scroll/message-scroll.component.html","./src/app/components/message/message.component.ts","./src/app/components/toggle-theme-icon/toggle-theme-icon.component.ts","./src/app/components/toggle-theme-icon/toggle-theme-icon.component.html","./src/app/components/welcome/welcome.component.ts","./src/app/components/welcome/welcome.component.html","./src/app/directives/add-component.directive.ts","./src/app/services/history.service.ts","./src/app/services/session-manager.service.ts","./src/app/services/socket.service.ts","./src/app/services/theme.service.ts","./src/app/utils/add-item.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WelcomeComponent } from './components/welcome/welcome.component';\nimport { LobbyComponent } from './components/lobby/lobby.component';\nimport { ChatWindowComponent } from './components/chat-window/chat-window.component';\nimport { SessionManagerService } from './services/session-manager.service';\n\nconst routes: Routes = [\n  { path: '', component: WelcomeComponent },\n  { path: 'lobby', component: LobbyComponent, canActivate:[SessionManagerService]},\n  { path: 'chat/:user', component: ChatWindowComponent, canActivate:[SessionManagerService]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ThemeService } from './services/theme.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [ThemeService]\n})\nexport class AppComponent implements OnInit{\n  title = 'angular-chat';\n  darkTheme: boolean = true;\n\n  constructor(private themeService: ThemeService) {}\n\n  ngOnInit(){\n    this.themeService.toggleTheme.subscribe(data => {\n      this.darkTheme = !this.darkTheme\n    });\n }\n}\n","<div class=\"main-component\" [ngClass]=\"{'dark-theme': darkTheme == true, 'ligth-theme': darkTheme == false}\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgMaterialIconModule } from 'ng-material-icon';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MessageComponent } from './components/message/message.component';\nimport { ChatWindowComponent } from './components/chat-window/chat-window.component';\nimport { WelcomeComponent } from './components/welcome/welcome.component';\nimport { MessageScrollComponent } from './components/message-scroll/message-scroll.component';\nimport { AddComponentDirective } from './directives/add-component.directive';\nimport { LobbyComponent } from './components/lobby/lobby.component';\nimport { ToggleThemeIconComponent } from './components/toggle-theme-icon/toggle-theme-icon.component';\nimport { SessionManagerService } from './services/session-manager.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MessageComponent,\n    ChatWindowComponent,\n    WelcomeComponent,\n    MessageScrollComponent,\n    AddComponentDirective,\n    LobbyComponent,\n    ToggleThemeIconComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgMaterialIconModule\n  ],\n  providers: [SessionManagerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { SocketService } from 'src/app/services/socket.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-chat-window',\n  templateUrl: './chat-window.component.html',\n  styleUrls: ['./chat-window.component.scss']\n})\nexport class ChatWindowComponent implements OnInit {\n  public username: string;\n  public userTyping: boolean = false;\n  public typingMessage: string = 'escribiendo...';\n  @ViewChild('messageInput', { static: true }) input: ElementRef;\n  constructor(private socketService: SocketService, private route: ActivatedRoute, private router: Router) {\n    this.socketService.socket.on('typing', username => {\n      if (this.username == username) {\n        this.userTyping = true;\n      }\n    })\n    this.socketService.socket.on('stop typing', username => {\n      if (this.username == username) {\n        this.userTyping = false;\n      }\n    })\n  }\n\n  ngOnInit(): void {\n    this.input.nativeElement.focus()\n    this.route.params.subscribe((params: Params) => {\n      this.username = params.user; \n    });\n    this.socketService.currentConversation = this.username;\n  }\n\n  toLobby() {\n    this.router.navigate(['lobby'])\n  }\n\n  typing() {\n    this.socketService.socket.emit('typing', this.username)\n  }\n\n  stopTyping() {\n    this.socketService.socket.emit('stop typing', this.username)\n  }\n\n  sendMessage(message) {\n    this.socketService.socket.emit('stop typing', this.username)\n    this.socketService.sendMessage(this.username, message)\n    this.input.nativeElement.value = ''\n  }\n\n}\n","<section class=\"chat-container\">\n  <nav class=\"header\">\n    <div class=\"icon-container left\" (click)=\"toLobby()\">\n      <ng-material-icon icon=\"arrow_back\" size=\"2\" ></ng-material-icon>\n    </div>\n    <div class=\"username-area\">\n      <span class=\"username\">{{username}}</span>\n      <span class=\"typing-message\" *ngIf=\"userTyping\">{{typingMessage}}</span>\n    </div>\n    <div class=\"icon-container rigth\">\n      <app-toggle-theme-icon></app-toggle-theme-icon>\n    </div>\n  </nav>\n  <app-message-scroll class=\"chat\" fromUser=\"{{username}}\"></app-message-scroll>\n  <footer class=\"writter\">\n    <input type=\"text\" #messageInput class=\"textbox\" placeholder=\"Mensaje\" (keyup.enter)=\"sendMessage(messageInput.value)\" (input)=\"typing()\" (blur)=\"stopTyping()\">\n    <button class=\"send-message\" (click)=\"sendMessage(messageInput.value)\">\n      <ng-material-icon icon=\"send\" size=\"2\" ></ng-material-icon>\n    </button>\n  </footer>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from 'src/app/services/socket.service';\nimport { Router } from '@angular/router';\nimport { HistoryService } from 'src/app/services/history.service';\n\n@Component({\n  selector: 'app-lobby',\n  templateUrl: './lobby.component.html',\n  styleUrls: ['./lobby.component.scss']\n})\nexport class LobbyComponent implements OnInit {\n  public userlist: Array<string> = []\n  public historyNotifications: object = {};\n  private socket: any;\n  public lobbyEmptyMessage: string = ':( Lo sentimos, no hay más usuarios, invita a tus amigos a unirse';\n\n  constructor(private socketService: SocketService, private router: Router, private history: HistoryService) {\n    this.userlist = socketService.usersList\n    this.socket = socketService.socket\n    history.notifications.on('one unread more', username => {\n      this.historyNotifications[username] = (this.historyNotifications[username] || 0) + 1\n    })\n    history.notifications.on('all readed', username => {\n      delete(this.historyNotifications[username])\n    })\n  }\n\n  ngOnInit(): void {\n    this.socketService.currentConversation = '';\n  }\n\n  messageTo(username) {\n    this.router.navigate(['chat', username])\n  }\n\n}\n","<section class=\"lobby-container\">\n  <nav class=\"header\">\n    <span class=\"title\">Angular Chat</span>\n    <div class=\"icon-container\">\n      <app-toggle-theme-icon></app-toggle-theme-icon>\n    </div>\n  </nav>\n  <div class=\"userlist\">\n    <div *ngFor=\"let usernameOfList of userlist\" class=\"user-element\" (click)=\"messageTo(usernameOfList)\">\n      <span class=\"username\">@{{usernameOfList}}</span>\n      <span *ngIf=\"historyNotifications[usernameOfList]\" class=\"notification\">{{historyNotifications[usernameOfList]}}</span>\n    </div>\n    <span *ngIf=\"!userlist.length\"class=\"nobody-at-lobby\">\n      {{lobbyEmptyMessage}}\n    </span>\n  </div>\n</section>","import { Component, OnInit, ViewChild, ComponentFactoryResolver, Input } from '@angular/core';\nimport { AddComponentDirective } from 'src/app/directives/add-component.directive';\nimport { MessageData } from 'src/app/interfaces/message';\nimport { AddItem } from 'src/app/utils/add-item';\nimport { SocketService } from 'src/app/services/socket.service';\nimport { MessageComponent } from '../message/message.component';\nimport { HistoryService } from 'src/app/services/history.service';\n\n\n@Component({\n  selector: 'app-message-scroll',\n  templateUrl: './message-scroll.component.html',\n  styleUrls: ['./message-scroll.component.scss']\n})\nexport class MessageScrollComponent implements OnInit {\n  private localSuscriber;\n  @Input() public fromUser: string;\n  @ViewChild(AddComponentDirective, {static: true}) addMessage: AddComponentDirective;\n\n  constructor(private socketService: SocketService, private componentFactoryResolver: ComponentFactoryResolver, private history: HistoryService){\n\n    this.socketService.localEmitter.on('local message outcome', data => {\n      if (data.username == this.fromUser) {\n        const messageObject = {\n          isResponse: false, \n          message: data.message, \n          date: data.date\n        }\n        this.loadMessageOnView( new AddItem(MessageComponent, messageObject))\n        this.history.addMessage(this.fromUser, messageObject, true)\n      }\n    })\n    this.socketService.localEmitter.on('local message income', data => {\n      if (data.username == this.fromUser) {\n        const messageObject = {\n          isResponse: true, \n          message: data.message, \n          date: data.date\n        }\n        this.loadMessageOnView( new AddItem(MessageComponent, messageObject))\n        this.history.addMessage(this.fromUser, messageObject, true)\n      }\n    })\n  }\n\n  loadMessageOnView(message: AddItem) {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(message.component);\n    const viewContainerRef = this.addMessage.viewContainerRef;\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n\n    (<MessageData>componentRef.instance).data = message.data;\n\n  }\n\n  ngOnInit(): void {\n    let messagesFromHistory = this.history.getHistory(this.fromUser)\n    \n    if(messagesFromHistory != undefined) {\n      messagesFromHistory.forEach( e => {\n        this.loadMessageOnView(\n          new AddItem(\n            MessageComponent, \n            {\n              isResponse: e.isResponse, \n              message: e.message, \n              date: e.date\n            }\n          )\n        )\n      })\n    }\n  }\n\n  ngOnDestroy(){\n    this.socketService.localEmitter.removeAllListeners('local message outcome');\n    this.socketService.localEmitter.removeAllListeners('local message income');\n  }\n}\n","<div class=\"message-scroll-container\">\n  <ng-template add-component></ng-template>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { MessageData } from 'src/app/interfaces/message';\n\n@Component({\n  selector: 'app-message',\n  template: `\n  <div [class.response]=\"this.data.isResponse == true\" class=\"message-container\">\n    <div class=\"message\">\n      <p class=\"message-content\">{{data.message}}</p>\n      <span class=\"date\">{{data.date}}</span>\n    </div>\n  </div>\n  `,\n  styleUrls: ['./message.component.scss']\n})\nexport class MessageComponent implements MessageData{\n\n  @Input() data: any;\n\n}\n","import { Component } from '@angular/core';\nimport { ThemeService } from 'src/app/services/theme.service';\n\n@Component({\n  selector: 'app-toggle-theme-icon',\n  templateUrl: './toggle-theme-icon.component.html',\n  styleUrls: ['./toggle-theme-icon.component.scss']\n})\nexport class ToggleThemeIconComponent {\n\n  constructor(private themeService: ThemeService) {}\n\n  toggleTheme() {\n    this.themeService.toggleTheme.emit('toggle');\n  }\n\n}\n","<div class=\"toggle-theme-icon-container\" (click)=\"toggleTheme()\">\n  <ng-material-icon icon=\"brightness_medium\" size=\"2\" ></ng-material-icon>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from 'src/app/services/socket.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\n\nexport class WelcomeComponent implements OnInit {\n\n  socket: any;\n  error: boolean = false;\n  errorMessage: string = 'Nombre de usuario no dispobnible'\n\n  constructor( socketService: SocketService, private router: Router ) {\n    this.socket = socketService.socket\n  }\n\n  ngOnInit() {\n    this.socket.on('sign in', () => {\n      this.error = false;\n    })\n    this.socket.on('username not available', () => {\n      this.error = true;\n    })\n  }\n\n  sendUsername(username) {\n    this.socket.emit('add user', username)\n  }\n\n}\n","<div class=\"welcome-container\">\n  <div class=\"icon-container\">\n    <app-toggle-theme-icon></app-toggle-theme-icon>\n  </div>\n  <div class=\"textarea\">\n    <span class=\"welcome-title\">Ingresa tu usuario</span>\n    <input type=\"text\" #usernameInput class=\"username-input\" (keyup.enter)=\"sendUsername(usernameInput.value)\">\n    <span *ngIf=\"error\" class=\"error\">{{errorMessage}}</span>\n  </div>\n</div>\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[add-component]'\n})\n\nexport class AddComponentDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}","import { Injectable } from '@angular/core';\nimport { EventEmitter } from 'events';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoryService {\n  private _messages: object = {};\n  public notifications: any = new EventEmitter()\n\n  constructor() { }\n\n  addMessage(fromUser: string, message: object, readed: boolean = false) {\n    this._messages[fromUser] = this._messages[fromUser] || []\n    this._messages[fromUser].push(message)\n    if(!readed) {\n      this.notifications.emit('one unread more', fromUser)\n    }\n  }\n\n  getHistory(fromUser: string) {\n    const history = this._messages[fromUser] || undefined;\n    this.notifications.emit('all readed', fromUser)\n    return history\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionManagerService implements CanActivate{\n  private _session:boolean = false;\n\n  constructor(private router: Router) { }\n\n  canActivate(){\n    if (!this._session) { this.router.navigateByUrl('/')}\n    return true;\n  }\n\n  upSession() {\n    this._session = true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport io from 'socket.io-client';\nimport { Router } from '@angular/router';\nimport { SessionManagerService } from './session-manager.service';\nimport { HistoryService } from './history.service';\nimport { EventEmitter } from 'events';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n  \n  private _socket: any;\n  private _hasSession: boolean = false;\n  private _username: string = '';\n  private _localEmmiter: any;\n  private _usersList: Array<string> = [];\n  private _currentConversation: string = '';\n  \n  constructor(private _router: Router, private _session: SessionManagerService, private _history: HistoryService) {\n      this._socket = io()\n      this._localEmmiter = new EventEmitter()\n\n      this._socket.on('sign in', data => {\n        this._username = data.username\n        this._usersList = data.usersList\n        this._hasSession = true;\n        this._session.upSession()\n        this._router.navigate(['lobby'])\n      })\n\n      this._socket.on('user added', username => {\n        this._usersList.push(username)\n      })\n\n      this._socket.on('user left', username => {\n        let index = this._usersList.findIndex(e => e == username)\n        this._usersList.splice(index, 1)\n      })\n\n      this._socket.on('incoming message', data => {\n        const messageData = {\n          isResponse: true,\n          message: data.message,\n          date: data.date\n        }\n        if(data.username != this._currentConversation) {\n          this._history.addMessage(data.username, messageData)\n        }\n        else {\n          this._localEmmiter.emit('local message income', data)\n        }\n      })\n  }\n  \n  public get socket() : any {\n    return this._socket\n  }\n  \n  public get localEmitter() : any {\n    return this._localEmmiter\n  }\n  \n  public get usersList() : Array<string> {\n    return this._usersList\n  }\n\n  \n  public get currentConversation() : string {\n    return this._currentConversation\n  }\n  \n  \n  public set currentConversation(value : string) {\n    this._currentConversation = value;\n  }\n  \n  \n  sendMessage(username: string, message: string) {\n    const now = new Date();\n    const nowHour = now.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: false\n    })\n    let messageData = {\n      username,\n      message,\n      date: nowHour\n    }\n\n    this._socket.emit('message', messageData)\n    messageData['isResponse'] = false\n    this._localEmmiter.emit('local message outcome', messageData)\n  }\n  \n}\n","import { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ThemeService {\n\n  public toggleTheme = new EventEmitter();\n\n}\n","import { Type } from '@angular/core';\n\nexport class AddItem {\n  constructor(public component: Type<any>, public data: any) {}\n}\n","export const environment = {\n  wsHost: 'http://localhost:5000',\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}